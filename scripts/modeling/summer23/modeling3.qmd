---
title: "Modeling 3"
format: html
editor: visual
author: Emi Cervantes
---

# Modeling (Final PART I)

# Load Libraries

```{r}
library(tidyverse)
library(sjPlot)
library(sjmisc)
library(sjlabelled)
```

# Load Dataset

```{r}
df <- readxl::read_xlsx('../../../data/math-anxiety-raw-data.xlsx')
```

## Clean Dataset

```{r}
tma_lst <- c("TMA_1", "TMA_2", "TMA_3","TMA_4", "TMA_5", "TMA_6",
             "TMA_sum", "TMA_avg")
df1 <- df %>% select(Condition, Sex, chicago, nonwhite, pretest,
              MW_day1_avg, MW_day2_avg, SI_avg, tma_lst,
              Understand_avg, Del_OverallAcc)
# Get rid of row that has NA values in Condition and/or Sex
df1 <- df1 %>% filter(Condition == 1 | Condition == 2)
df1 <- df1 %>% filter(!is.na(Sex))
df1$Condition[df1$Condition == 2] <- 0
# Assign 0 for "boy" and 1 for "girl"
df1$Sex[df1$Sex == 1] <- 0
df1$Sex[df1$Sex == 2] <- 1
# Make sure variable is categorical
df1$chicago <- as.factor(df1$chicago)
df1$Sex <- as.factor(df1$Sex)
```

# Math Anxiety by Gender

```{r}
df1 %>% ggplot(aes(x = TMA_avg, fill = Sex,
                   color = Sex)) +
  geom_density(alpha = 0.5) +
  theme_minimal() +
  facet_grid(cols = vars(chicago),
             labeller = labeller(chicago = location)) +
  scale_fill_manual(values = c("#F0E442", "#56B4E9"), labels = c("Boy", "Girl")) +
  scale_color_manual(values = c("#F0E442", "#56B4E9"), labels = c("Boy", "Girl")) +
  labs(x = "Math Anxiety", y = "Density",
       fill = "Gender", color = "Gender")
```

Girls seemed to have a higher math anxiety compared to boys overall. Check if the difference is significant by using ANOVA test.

```{r}
m1 <- aov(TMA_avg ~ Condition + chicago + Sex + Condition*Sex, 
          data = df1)
summary(m1)
```

```{r}
m2 <- aov(Del_OverallAcc ~ TMA_sum + chicago + Sex + Sex*Condition,
          data = df1, type = "III")
summary(m2)
```

No significant difference between gender on learning achievement and math anxiety was found by gender.

# Math Anxiety by Group and Gender

```{r}
cond <- c("No Worked EX", "Worked EX")
names(cond) <- c(0, 1)
location <- c("Irvine", "Chicago")
names(location) <- c(0, 1)
mu <- df1 %>% group_by(chicago, Condition, Sex) %>% summarize(mean = mean(TMA_avg))
```

```{r}
tma_hist_plt <- df1 %>% ggplot(aes(x = TMA_avg, fill = Sex,
                   color = Sex)) +
  geom_density(alpha = 0.2) +
  theme_minimal() +
  geom_vline(data=mu, aes(xintercept=mean, color=Sex),
           linetype="dashed") +
  facet_grid(rows = vars(Condition),
             cols = vars(chicago),
             labeller = labeller(Condition = cond,
                                 chicago = location)) +
  scale_fill_manual(values = c("#FFC20A", "#0C7BDC"), labels = c("Boy", "Girl")) +
  scale_color_manual(values = c("#FFC20A", "#0C7BDC"), labels = c("Boy", "Girl")) +
  labs(x = "Math Anxiety", y = "Density",
       fill = "Gender", color = "Gender") +theme(legend.position="bottom")
ggsave(tma_hist_plt, file =  "../../../outputs/tma_hist_plt.png",
       width = 8, height = 5)
```

```{r}
m3 <- aov(TMA_avg ~ SI_avg + MW_day2_avg + chicago + Sex*Condition
          + Sex*Condition*chicago, 
          data = df1)
summary(m3)
```

```{r}
m4 <- aov(Del_OverallAcc ~ TMA_avg + SI_avg + MW_day2_avg  +
            chicago + Sex + Sex*Condition + Sex*chicago*Condition, data = df1)
summary(m4)
```

## Linear Regression

We will be fitting two different models to our data: one for predicting `Del_OverallAcc` and `Understand_avg`.

### Posttest Accuracy Scores

```{r}
# Check if there's any participant missing accuracy score data
df1 %>% count(is.na(Del_OverallAcc))
```

Every participant has a `Del_OverallAcc` data

```{r}
# Fit model
m6 <- Del_OverallAcc ~ TMA_avg + MW_day2_avg + SI_avg + chicago + Condition + Condition*Sex + Condition*TMA_avg + Condition*TMA_avg*Sex
fit6 <- lm(m6, data = df1)
summary(fit6)
```

### Perceived Understanding

```{r}
# Check if there's any participant missing understanding data
df1 %>% count(is.na(Understand_avg))
```

2 participants were missing `Understand_avg` data (row #56 and #198)

```{r}
# Fill out missing understanding avg data with the group average
df1 %>% filter(is.na(Understand_avg))
understand_avg1 <- df1 %>% filter(Condition == 1 & Sex == 0 & chicago == 0) %>% summarize(mean_understand = mean(Understand_avg, na.rm = TRUE))
understand_avg2 <- df1 %>% filter(Condition == 0 & Sex == 0 & chicago == 0) %>% summarize(mean_understand = mean(Understand_avg, na.rm = TRUE))
# assign imputed value
df1[56, 17] = understand_avg1
df1[198, 17] = understand_avg1
```


```{r}
m7 <- Understand_avg ~ TMA_avg + MW_day2_avg + SI_avg + chicago + Condition + Condition*Sex + Condition*TMA_avg + Condition*TMA_avg*Sex
fit7 <- lm(m7, data = df1)
summary(fit7)
```

```{r}
tab_model(fit6, fit7,
          pred.labels = c("Intercept", "Math 
                          Anxiety", "Mind 
                          Wandering", 
                          "Situational 
                          Interest", "Site (Chicago)", "Condition (Worked EX)", "Gender (boy)", "Condition (Worked EX)*Gender (boy)", "Math Anxiety*Condition (Worked EX)", "Math Anxiety*Gender (boy)", "Math Anxiety*Condition (Worked EX)*Gender (boy)"),
  dv.labels = c("Posttest Accuracy", "Perceived Understanding"))
```

