---
title: "Modeling 2"
format: html
editor: visual
author: Emi Cervantes
---

# Modeling Part 2: Structural Equation Modeling - Path Analysis

*Structural Equation Modeling* is a linear model framework that models both simultaneous regression equations with latent variables.

# Load Libraries

```{r}
library(tidyverse)
library(lavaan)
library(semPlot)
library(semptools)
library(report)
library (semTable)
```

# Load Dataset

```{r}
df <- readxl::read_xlsx('../../../data/math-anxiety-raw-data.xlsx')
```

## Clean Dataset

```{r}
tma_lst <- c("TMA_1", "TMA_2", "TMA_3","TMA_4", "TMA_5", "TMA_6",
             "TMA_sum", "TMA_avg")
df1 <- df %>% select(Condition, Sex, chicago, nonwhite, pretest,
              MW_day1_avg, MW_day2_avg, SI_avg, tma_lst,
              Understand_avg, Del_OverallAcc)
# Get rid of row that has NA values in Condition and/or Sex
df1 <- df1 %>% filter(Condition == 1 | Condition == 2)
df1 <- df1 %>% filter(!is.na(Sex))
df1$Condition[df1$Condition == 2] <- 0
# Assign 0 for "boy" and 1 for "girl"
df1$Sex[df1$Sex == 1] <- 0
df1$Sex[df1$Sex == 2] <- 1
# Make sure variable is categorical
df1$chicago <- as.numeric(df1$chicago)
df1$Sex <- as.numeric(df1$Sex)
df1$nonwhite <- as.numeric(df1$nonwhite)
df1$Condition <- as.numeric(df1$Condition)
```

# Structural Equation Model

We will be observing 6 latent variables:

-   *Academic Preparation*
-   *Sociocultural status*

```{r}
m1 <- '
# measurement model
prep =~ chicago + pretest
socio_status =~ Sex
tma =~ TMA_avg
mw =~ MW_day1_avg + MW_day2_avg
si =~ SI_avg
achievement =~ Del_OverallAcc + Understand_avg
# regression
tma ~ mw + si + prep + socio_status
achievement ~ tma + prep + socio_status
'
fit1 <- sem(m1, data = df1,
            ordered = c("Condition", "Sex"))
summary(fit1,standardized=TRUE, fit.measures=TRUE)
```

```{r}
parameterEstimates(fit1)
semPaths(fit1,
           whatLabels = "est",
           sizeMan = 10,
           edge.label.cex = 1.15,
           style = "ram",
           nCharNodes = 0, nCharEdges = 0)
```

```{r}
# Path analysis
m2 <- '
  TMA_avg ~ 1 + Sex + chicago + MW_day2_avg + SI_avg
  Del_OverallAcc ~ 1 + TMA_avg + chicago + Sex
'
fit2 <- sem(m2, data = df1,
             ordered = c("Condition", "Sex"), group = "Condition")
summary(fit2)
```

## Subgroup Analysis + Path Analysis

We will split the data into two subgroups based on sites: Chicago and Irvine

```{r}
# Split data by sites
# chicago data
df_i <- df1 %>% filter(chicago == 1)
# irvine data
df_c <- df1 %>% filter(chicago == 0)
```

Now we have 2 new dataframes:

1.  `df_c`: Chicago
2.  `df_i`: Irvine

For each model, we will fit a path analysis model and will output two different results, path analysis for girls and path analysis for boys. The path analysis model for each data is defined as follow:

`TMA_avg ~ 1 + SI_avg + MW_day2_avg + Condition`

`Del_OvereallAcc ~ 1 + TMA_avg + Condition`

```{r}
# model definition
m <- '
  TMA_avg ~ 1 + MW_day2_avg + SI_avg + Condition
  Del_OverallAcc ~ 1 + TMA_avg + Condition
'
```

### Chicago Data

```{r}
# free model
fit_c <- sem(m, data = df_c, group = "Sex")
# constrained model
fit_c_c <- sem(m, data = df_c, group = "Sex",
                group.equal = c("intercepts", "regressions"))
```

```{r}
# check if the constrained and free models are significantly diff
anova(fit_c, fit_c_c)
```

### Irvine Data

```{r}
# free model
fit_i <- sem(m, data = df_i, group = "Sex")
# constrained model
fit_i_c <- sem(m, data = df_i, group = "Sex",
                group.equal = c("intercepts", "regressions"))
```

```{r}
# check if the constrained and free models are significantly diff
anova(fit_i, fit_i_c)
```

### Visualize Results

```{r}
# Chicago
semPaths(fit_c,
         whatLabels = "est",
         sizeMan = 10,
         edge.label.cex = 1.15,
         style = "ram",
         nCharNodes = 0, nCharEdges = 0,
         nodeLabels = c("Math\nAnxiety", "Accuracy",
                        "MW","SI", "Condition"),
         intercepts = FALSE)

# Irvine
semPaths(fit_i,
         whatLabels = "est",
         sizeMan = 10,
         edge.label.cex = 1.15,
         style = "ram",
         nCharNodes = 0, nCharEdges = 0,
         nodeLabels = c("Math\nAnxiety", "Accuracy",
                        "MW","SI", "Condition"),
         intercepts = FALSE)

```

## Results

-   No significant different was found in model between boys and girls in both Chicago and Irvine (Chicago had a close p-value)

-    Chicago:

    -   Condition had similar effects on both math anxiety and accuracy

    -   Effects of mind wandering and situational interests seemed to be different by a lot more

        -   Girls: MW 0.13, SI -0.21 (direct effect on math anxiety)

        -   Boys: MW 0.43, SI -0.05 (direct effect on math anxiety) -\> Possible that boys were less likely to pay attention during the video lessons and resulted in higher math anxiety (explained by the density plot)

    -   Condition had somewhat a different effect on accuracy

        -   Girls: Condition 0.06

        -   Boys: Condition: -0.03

-   Irvine:

    -   Similar effect by math anxiety on accuracy, and Condition both had positive effects on math anxiety

        -   Girls: Condition 0.40 (direct effect on math anxiety)

        -   Boys: Condition 0.27 (direct effect on math anxiety)

    -   Effect on situational interest on math anxiety was very similar among genders, but mind wandering was again different

        -   Girls: MW 0.20 (direct effect on math anxiety)

        -   Boys: MW 0.08 (direct effect on math anxiety)

        -   This time, girls had a greater effect by mind wandering than boys

    -   Condition had an opposite effect on accuracy

        -   Girls: Condition -0.08 (direct effect on accuracy)

        -   Boys: Condition 0.14 (direct effect on accuracy)
