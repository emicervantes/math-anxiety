---
title: "Sampling"
format: html
editor: visual
author: Emi Cervantes
date: Sys. date() 
---

## Research Goal

The goal of this study is to find the effectiveness of worked examples on math anxiety. Particularly, I'm interested in finding if there's a gender difference in the effects of worked examples.

## Research Questions & Variablees

*Research Question:* How does the impact of worked examples on mathematical anxiety differ by gender?

-   *DV:* Learning achievements (understanding and accuracy) `Understand_avg`, `Del_OverallAcc`
-   *IV:* Condition, Sex, School, race, pretest, TMA (1-5), MW, SI `Condition`, `Sex`, `chicago`, `race_rv`, `pretest`, `TMA_1`, `TMA_2`, `TMA_3`,`TMA_4`, `TMA_5`, `TMA_6`, `TMA_avg`, `MW_day1_avg`, `MW_day2_avg`, `SI_avg`

## Understanding Final Sample

### Load Libraries

```{r}
library(tidyverse)
library(janitor)
library(gridExtra)
library(ggpubr)
library(skimr)
```

### Load Data

```{r}
df <- readxl::read_xlsx('../../../data/math-anxiety-raw-data.xlsx')
```

```{r}
df %>% group_by(chicago) %>% count()
```


### Data Selection

Obtaining variables of interest for the study:

```{r}
tma_lst <- c("TMA_1", "TMA_2", "TMA_3","TMA_4", "TMA_5", "TMA_6",
             "TMA_avg")
df1 <- df %>% select(Condition, Sex, chicago, race_rv, pretest,
              MW_day1_avg, MW_day2_avg, SI_avg, tma_lst,
              Understand_avg, Del_OverallAcc)
# Get rid of row that has NA values in Condition and/or Sex
df1 <- df1 %>% filter(Condition == 1 | Condition == 2)
df1 <- df1 %>% filter(!is.na(Sex))
head(df1)
```

### Data Inspection & Cleaning

Change values and type of some variables:

```{r}
# Assign "no worked ex" group 0
df1$Condition[df1$Condition == 2] <- 0
# Assign 0 for "boy" and 1 for "girl"
df1$Sex[df1$Sex == 1] <- 0
df1$Sex[df1$Sex == 2] <- 1
# Make sure variable is categorical
df1$chicago <- as.factor(df1$chicago)
df1$Sex <- as.factor(df1$Sex)
df1$race_rv <- as.factor(df1$race_rv)
```

#### Ethnicity Descriptives

```{r}
df1 %>% group_by(race_rv) %>% count() %>% 
  mutate(p = n / nrow(df1))
```

Summary:

-   18% white (42)
-   3% black (7)
-   15% Asian/Pacific Islander (35)
-   17% Hispanic/Latinx (39)
-   32% Mixed race/other (73)
-   14% Misisng (33)


#### Condition and Pretest Descriptives

```{r}
control_n <- df1 %>% 
  filter(Condition == 0) %>% group_by(chicago, Sex) %>% count()
exp_n <- df1 %>% 
  filter(Condition == 1) %>% group_by(chicago, Sex) %>% count()
```

```{r}
sample_size <- data.frame(rbind(t(control_n[3]),t(exp_n[3]))) %>% remove_rownames 
sample_size <- cbind(c("No Worked EX", "Worked EX"), sample_size)
sample_size <- sample_size %>% mutate(Total =  rowSums(sample_size[2:5])) %>% 
  adorn_totals("row") %>% data.frame()
colnames(sample_size) <- c("Condition", "Boy-I", "Girl-I", "Boy-C", "Girl-C", "Total")
sample_size
```

Total number of samples in data: $n = 229$

-   Number of samples in No Worked EX group: $n_{c} = 111$
-   Number of samples in Worked EX group: $n_{ex} = 118$

```{r}
skim(df1)
```

```{r}
cond <- c("No Worked EX", "Worked EX")
names(cond) <- c(0, 1)
location <- c("Irvine", "Chicago")
names(location) <- c(0, 1)

df1 %>% group_by(Sex, Condition, chicago) %>% 
  count() %>% 
  ggplot(aes(x = chicago, y = n, fill = as.factor(Sex))) + 
  facet_grid(.~ Condition, 
             labeller = labeller(Condition = cond)) +
  geom_bar(position = "dodge", stat = "identity", color = "black")+
  geom_text(aes(label=n),  position=position_dodge(width=0.9), 
            vjust=-0.25) +
  labs(title = "Sample Size", fill = "Gender", x = "School Location", y = "Count") +
  theme_minimal() +
  scale_fill_manual(values = c("#F0E442", "#56B4E9"), labels = c("Boy", "Girl"))+
  scale_x_discrete(labels=c("Irvine", "Chicago"))
```

#### Students' Pretest Scores

```{r}
df1 %>% group_by(chicago, Sex) %>% 
  summarize(avg_pretest = mean(pretest, na.rm = TRUE)) %>% 
  ggplot(aes(x =as.factor(Sex), y = avg_pretest, fill = as.factor(Sex))) + 
  geom_text(aes(label=round(avg_pretest, 3)),  position=position_dodge(width=0.9), 
            vjust=-0.25) +
  facet_grid(.~ chicago, 
             labeller = labeller(chicago = location)) +
  geom_bar(position = "dodge", stat = "identity", color = "black") +
  labs(title = "Avg Pretest Score by Gender and Location",
       x = "Gender", y = "Avg Pretest", fill = "Gender") +
  scale_fill_manual(values = c("#F0E442", "#56B4E9"), labels = c("Boy", "Girl"))+
  theme_minimal() + ylim(0,1) + scale_x_discrete(labels=c("Boy", "Girl"))
```

t-test:

```{r}
t.test(pretest ~ chicago, data = df1)
```


#### TMA Scores

```{r}
df1 %>% ggplot(aes(x = as.factor(chicago), y = TMA_avg, fill = as.factor(Sex))) + 
  geom_boxplot() +
  facet_grid(.~ Condition, 
             labeller = labeller(Condition = cond)) +
  theme_light() +
  scale_fill_manual(values = c("#F0E442", "#56B4E9"), labels = c("Boy", "Girl"))+
  scale_x_discrete(labels=c("Irvine", "Chicago")) +
  labs(title = "Average TMA Distribution", fill = "Gender", 
       x = "School Location", y = "TMA")
  
  
```

```{r}
# TMA 1
tma_plt1 <- df1 %>% ggplot(aes(x = as.factor(chicago), y = TMA_1, fill = as.factor(Sex))) + 
  geom_boxplot() +
  facet_grid(.~ Condition, 
             labeller = labeller(Condition = cond)) +
  theme_light() +
  scale_fill_manual(values = c("#F0E442", "#56B4E9"), labels = c("Boy", "Girl"))+
  scale_x_discrete(labels=c("Irvine", "Chicago")) +
  labs(title = "TMA 1", fill = "Gender", 
       x = "School Location", y = "Count")
# TMA 2
tma_plt2 <- df1 %>% ggplot(aes(x = as.factor(chicago), y = TMA_2, fill = as.factor(Sex))) + 
  geom_boxplot() +
  facet_grid(.~ Condition, 
             labeller = labeller(Condition = cond)) +
  theme_light() +
  scale_fill_manual(values = c("#F0E442", "#56B4E9"), labels = c("Boy", "Girl"))+
  scale_x_discrete(labels=c("Irvine", "Chicago")) +
  labs(title = "TMA 2", fill = "Gender", 
       x = "School Location", y = "Count")
# TMA 3
tma_plt3 <- df1 %>% ggplot(aes(x = as.factor(chicago), y = TMA_3, fill = as.factor(Sex))) + 
  geom_boxplot() +
  facet_grid(.~ Condition, 
             labeller = labeller(Condition = cond)) +
  theme_light() +
  scale_fill_manual(values = c("#F0E442", "#56B4E9"), labels = c("Boy", "Girl"))+
  scale_x_discrete(labels=c("Irvine", "Chicago")) +
  labs(title = "TMA 3", fill = "Gender", 
       x = "School Location", y = "Count")
# TMA 4
tma_plt4 <- df1 %>% ggplot(aes(x = as.factor(chicago), y = TMA_4, fill = as.factor(Sex))) + 
  geom_boxplot() +
  facet_grid(.~ Condition, 
             labeller = labeller(Condition = cond)) +
  theme_light() +
  scale_fill_manual(values = c("#F0E442", "#56B4E9"), labels = c("Boy", "Girl"))+
  scale_x_discrete(labels=c("Irvine", "Chicago")) +
  labs(title = "TMA 4", fill = "Gender", 
       x = "School Location", y = "Count")
# TMA 5
tma_plt5 <- df1 %>% ggplot(aes(x = as.factor(chicago), y = TMA_5, fill = as.factor(Sex))) + 
  geom_boxplot() +
  facet_grid(.~ Condition, 
             labeller = labeller(Condition = cond)) +
  theme_light() +
  scale_fill_manual(values = c("#F0E442", "#56B4E9"), labels = c("Boy", "Girl"))+
  scale_x_discrete(labels=c("Irvine", "Chicago")) +
  labs(title = "TMA 5", fill = "Gender", 
       x = "School Location", y = "Count")
# TMA 6
tma_plt6 <-  df1 %>% ggplot(aes(x = as.factor(chicago), y = TMA_6, fill = as.factor(Sex))) + 
  geom_boxplot() +
  facet_grid(.~ Condition, 
             labeller = labeller(Condition = cond)) +
  theme_light() +
  scale_fill_manual(values = c("#F0E442", "#56B4E9"), labels = c("Boy", "Girl"))+
  scale_x_discrete(labels=c("Irvine", "Chicago")) +
  labs(title = "TMA 6", fill = "Gender", 
       x = "School Location", y = "Count")
```

```{r}
# TMA distribution for each question
tma_dist <- ggarrange(tma_plt1, tma_plt2, tma_plt3, tma_plt4, tma_plt5, tma_plt6, 
          common.legend = TRUE, legend="bottom", ncol = 3, nrow = 2)
tma_dist
```

```{r}
df1 %>% ggplot(aes(x = as.factor(Sex), y = TMA_avg, fill = as.factor(Sex))) + 
  geom_boxplot() +
  facet_grid(.~ Condition, 
             labeller = labeller(Condition = cond)) +
  theme_light() +
  scale_fill_manual(values = c("#F0E442", "#56B4E9"), labels = c("Boy", "Girl"))+
  scale_x_discrete(labels=c("Boy", "Girl")) +
  labs(title = "Average TMA Distribution", fill = "Gender", 
       x = "Gender", y = "Count")
```

```{r}
# TMA 1
tma_plt1 <- df1 %>% ggplot(aes(x = as.factor(Sex), y = TMA_1, fill = as.factor(Sex))) + 
  geom_boxplot() +
  facet_grid(.~ Condition, 
             labeller = labeller(Condition = cond)) +
  theme_light() +
  scale_fill_manual(values = c("#F0E442", "#56B4E9"), labels = c("Boy", "Girl"))+
  scale_x_discrete(labels=c("Boy", "Girl")) +
  labs(title = "TMA 1", fill = "Gender", 
       x = "Gender", y = "Count")
# TMA 2
tma_plt2 <- df1 %>% ggplot(aes(x = as.factor(Sex), y = TMA_2, fill = as.factor(Sex))) + 
  geom_boxplot() +
  facet_grid(.~ Condition, 
             labeller = labeller(Condition = cond)) +
  theme_light() +
  scale_fill_manual(values = c("#F0E442", "#56B4E9"), labels = c("Boy", "Girl"))+
  scale_x_discrete(labels=c("Boy", "Girl")) +
  labs(title = "TMA 2", fill = "Gender", 
       x = "Gender", y = "Count")
# TMA 3
tma_plt3 <- df1 %>% ggplot(aes(x = as.factor(Sex), y = TMA_3, fill = as.factor(Sex))) + 
  geom_boxplot() +
  facet_grid(.~ Condition, 
             labeller = labeller(Condition = cond)) +
  theme_light() +
  scale_fill_manual(values = c("#F0E442", "#56B4E9"), labels = c("Boy", "Girl"))+
  scale_x_discrete(labels=c("Boy", "Girl")) +
  labs(title = "TMA 3", fill = "Gender", 
       x = "Gender", y = "Count")
# TMA 4
tma_plt4 <- df1 %>% ggplot(aes(x = as.factor(Sex), y = TMA_4, fill = as.factor(Sex))) + 
  geom_boxplot() +
  facet_grid(.~ Condition, 
             labeller = labeller(Condition = cond)) +
  theme_light() +
  scale_fill_manual(values = c("#F0E442", "#56B4E9"), labels = c("Boy", "Girl")) +
  scale_x_discrete(labels=c("Boy", "Girl")) +
  labs(title = "TMA 4", fill = "Gender", 
       x = "Gender", y = "Count")
# TMA 5
tma_plt5 <- df1 %>% ggplot(aes(x = as.factor(Sex), y = TMA_5, fill = as.factor(Sex))) + 
  geom_boxplot() +
  facet_grid(.~ Condition, 
             labeller = labeller(Condition = cond)) +
  theme_light() +
  scale_fill_manual(values = c("#F0E442", "#56B4E9"), labels = c("Boy", "Girl"))+
  scale_x_discrete(labels=c("Boy", "Girl")) + 
  labs(title = "TMA 5", fill = "Gender", 
       x = "Gender", y = "Count")
# TMA 6
tma_plt6 <-  df1 %>% ggplot(aes(x = as.factor(Sex), y = TMA_6, fill = as.factor(Sex))) + 
  geom_boxplot() +
  facet_grid(.~ Condition, 
             labeller = labeller(Condition = cond)) +
  theme_light() +
  scale_fill_manual(values = c("#F0E442", "#56B4E9"), labels = c("Boy", "Girl"))+
  scale_x_discrete(labels=c("Boy", "Girl")) +
  labs(title = "TMA 6", fill = "Gender", 
       x = "Gender", y = "Count")
```

```{r}
# TMA distribution for each question
tma_dist2 <- ggarrange(tma_plt1, tma_plt2, tma_plt3, tma_plt4, tma_plt5, tma_plt6, 
          common.legend = TRUE, legend="bottom", ncol = 3, nrow = 2)
tma_dist2
```

#### Mind Wandering and Situational Interest

##### Situational Interest

```{r}
df1 %>% ggplot(aes(x = SI_avg, fill = Condition)) +
  geom_histogram(bins = 10, color = "black") +
  facet_grid(.~ Condition, 
             labeller = labeller(Condition = cond)) + theme_light()
```

```{r}
df1 %>% ggplot(aes(x = as.factor(Sex), 
                   y = SI_avg,
                   fill = as.factor(Sex))) +
  geom_boxplot() +
  facet_grid(.~ Condition, 
             labeller = labeller(Condition = cond)) + 
  scale_fill_manual(values = c("#F0E442", "#56B4E9"), labels = c("Boy", "Girl"))+
  scale_x_discrete(labels=c("Boy", "Girl")) + theme_light() +
  labs("Siutational Interest Distribution",
       fill = "Gender", x= "Gender",
       y = "Avg Situational Interest")
```

##### Mind Wandering

Mind wandering scores were measured two times during the study: Day 1 and Day 2 (3 days after Day 1).

```{r}
# Day 1 distribution
df1 %>% ggplot(aes(x = MW_day1_avg, fill = Condition)) +
  geom_histogram(color = "black", bins = 10) +
  facet_grid(. ~ Condition,
             labeller = labeller(Condition = cond)) +
  theme_light() +
  labs(title = "Day 1 Mind Wandering Distribution",
       x = "Mind Wandering", y = "Count", fill = "Condition")
# Day 2 distribution
df1 %>% ggplot(aes(x = MW_day2_avg, fill = Condition)) +
  geom_histogram(color = "black", bins = 10) +
  facet_grid(. ~ Condition,
             labeller = labeller(Condition = cond)) +
  theme_light() +
  labs(title = "Day 2 Mind Wandering Distribution",
       x = "Mind Wandering", y = "Count", fill = "Condition")
```

```{r}
mw_box1 <- df1 %>% ggplot(aes(x = Sex, y = MW_day1_avg, fill = Sex)) +
  geom_boxplot( ) + 
  facet_grid(.~ Condition, 
             labeller = labeller(Condition = cond)) + 
  scale_fill_manual(values = c("#F0E442", "#56B4E9"), 
                    labels = c("Boy", "Girl"))+
  scale_x_discrete(labels=c("Boy", "Girl")) + theme_light() +
  labs(title = "Day 1 Mind Wandering Differences by Condition and Gender",
       x = "Gender", y = "Mind Wandering", fill = "Gender")
mw_box2 <- df1 %>% ggplot(aes(x = Sex, y = MW_day2_avg, fill = Sex)) +
  geom_boxplot( ) + 
  facet_grid(.~ Condition, 
             labeller = labeller(Condition = cond)) + 
  scale_fill_manual(values = c("#F0E442", "#56B4E9"), 
                    labels = c("Boy", "Girl"))+
  scale_x_discrete(labels=c("Boy", "Girl")) + theme_light() +
  labs(title = "Day 2 Mind Wandering Differences by Condition and Gender",
       x = "Gender", y = "Mind Wandering", fill = "Gender")
```

```{r}
mw_dist <- ggarrange(mw_box1, mw_box2, 
          common.legend = TRUE, legend="bottom", ncol = 2, nrow = 1)
mw_dist
```

#### Relationship between TMA and Learning Achievements

Learning Achievement measures: `Understand_avg`, `Del_OverallAcc`

```{r}
# TMA avg vs Overall accuracy scores
tma_acc_plt <- df1 %>% ggplot(aes(x = TMA_avg, y = Del_OverallAcc, 
                   color = as.factor(Sex))) +
  geom_point() + geom_smooth(method = "lm", alpha = 0.2) +
  scale_color_manual(values = c("#FFC20A", "#0C7BDC"), labels = c("Boy", "Girl")) +
  facet_grid(.~ Condition, 
             labeller = labeller(Condition = cond)) +
  theme_light() +
  labs(x = "Math Anxiety", y = "Overall Accuracy", color = "Gender")
ggsave(tma_acc_plt, file =  "../../../outputs/tma_acc_plt.png",
       width = 8, height = 4)
```


```{r}
# Fill out missing understanding avg data with the group average
df1 %>% filter(is.na(Understand_avg))
understand_avg1 <- df1 %>% filter(Condition == 1 & Sex == 0 & chicago == 0) %>% summarize(mean_understand = mean(Understand_avg, na.rm = TRUE))
understand_avg2 <- df1 %>% filter(Condition == 0 & Sex == 0 & chicago == 0) %>% summarize(mean_understand = mean(Understand_avg, na.rm = TRUE))
# assign imputed value
df1[56, 17] = understand_avg1
df1[198, 17] = understand_avg1
```

```{r}
# TMA avg vs Perceived understanding
tma_under_plt <- df1 %>% ggplot(aes(x = TMA_avg, y = Understand_avg, 
                   color = as.factor(Sex))) +
  geom_point() + geom_smooth(method = "lm", alpha = 0.2) +
  scale_color_manual(values = c("#FFC20A", "#0C7BDC"), labels = c("Boy", "Girl")) +
  facet_grid(.~ Condition, 
             labeller = labeller(Condition = cond)) +
  theme_light() +
  labs(x = "Math Anxiety", y = "Perceived Understanding", color = "Gender")
ggsave(tma_under_plt, file =  "../../../outputs/tma_under_plt.png",
       width = 8, height = 4)
```

```{r}
df2 <- data.frame(tma_score = unlist(cbind(df1['TMA_1'], df1['TMA_2'], df1['TMA_3'], df1['TMA_4'],
                        df1['TMA_5'], df1['TMA_6'])),
                  gender = unlist(cbind(df1['Sex'], df1['Sex'],df1['Sex'], df1['Sex'], 
                                          df1['Sex'], df1['Sex'])),
                  cond = unlist(cbind(df1['Condition'], df1['Condition'],df1['Condition'], 
                                      df1['Condition'], df1['Condition'],df1['Condition'])),
                  acc = unlist(cbind(df1['Del_OverallAcc'], 
                                            df1['Del_OverallAcc'],df1['Del_OverallAcc'], 
                                            df1['Del_OverallAcc'],
                                            df1['Del_OverallAcc'],df1['Del_OverallAcc'])) )
tma_row <- rownames(df2)
tma_row2 <- case_when(
  startsWith(tma_row, 'TMA_1') == TRUE ~ 1,
  startsWith(tma_row, 'TMA_2') == TRUE ~ 2,
  startsWith(tma_row, 'TMA_3') == TRUE ~ 3,
  startsWith(tma_row, 'TMA_4') == TRUE ~ 4,
  startsWith(tma_row, 'TMA_5') == TRUE ~ 5,
  startsWith(tma_row, 'TMA_6') == TRUE ~ 6
)
df2 <- cbind(tma = tma_row2, df2) %>% remove_rownames 
```

```{r}
df2 %>% ggplot(aes(x = tma_score, y = acc, color = as.factor(gender))) +
  geom_point() + geom_smooth(method = "lm", se = FALSE) +
  scale_color_manual(values = c("#FFC20A", "#0C7BDC"), labels = c("Boy", "Girl")) +
  facet_wrap(as.factor(tma) ~ as.factor(cond)) +
  theme_light() +
  labs(title = "TMA Avg vs Perceived Understanding",
       x = "TMA Avg", y = "Perceived Understanding", color = "Gender")
```

#### Relationship between Math Anxiety and MW, SI

MW and TMA:

```{r}
# Day 1 Mind wandering
mw1_tma <- df1 %>% 
  ggplot(aes(x = MW_day1_avg, y = TMA_avg, color = Sex)) +
  geom_point() +geom_smooth(method = "lm", se = FALSE) +
  facet_grid(. ~ Condition, labeller = labeller(Condition = cond)) +
  theme_light() +
  scale_color_manual(values = c("#FFC20A", "#0C7BDC"), labels = c("Boy", "Girl")) +
  labs(title = "Day 1 Mind Wandering vs TMA Avg",
       x = "Mind Wandering", y = "TMA Avg", color = "Gender")
# Day 2 Mind wandering
mw2_tma <- df1 %>% 
  ggplot(aes(x = MW_day2_avg, y = TMA_avg, color = Sex)) +
  geom_point() +geom_smooth(method = "lm", se = FALSE) +
  facet_grid(. ~ Condition, labeller = labeller(Condition = cond)) +
  theme_light() +
  scale_color_manual(values = c("#FFC20A", "#0C7BDC"), labels = c("Boy", "Girl")) +
  labs(title = "Day 2 Mind Wandering vs TMA Avg",
       x = "Mind Wandering", y = "TMA Avg", color = "Gender")
```

```{r}
mw_tma <- ggarrange(mw1_tma, mw2_tma, 
          common.legend = TRUE, legend="bottom", ncol = 2, nrow = 1)
mw_tma
```

SI and TMA:

```{r}
# Day 1 Mind wandering
df1 %>% 
  ggplot(aes(x = SI_avg, y = TMA_avg, color = Sex)) +
  geom_point() +geom_smooth(method = "lm", se = FALSE) +
  facet_grid(. ~ Condition, labeller = labeller(Condition = cond)) +
  theme_light() +
  scale_color_manual(values = c("#FFC20A", "#0C7BDC"), labels = c("Boy", "Girl")) +
  labs(title = "Situational Interest vs TMA Avg",
       x = "Situational Interest", y = "TMA Avg", color = "Gender")
```
